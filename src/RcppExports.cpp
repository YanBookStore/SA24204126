// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// mcmc_linreg
NumericMatrix mcmc_linreg(const NumericVector& y, const NumericMatrix& X, const NumericVector& beta_init, double sigma2, double tau2, int n_iter, double proposal_sd);
RcppExport SEXP _SA24204126_mcmc_linreg(SEXP ySEXP, SEXP XSEXP, SEXP beta_initSEXP, SEXP sigma2SEXP, SEXP tau2SEXP, SEXP n_iterSEXP, SEXP proposal_sdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type beta_init(beta_initSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type tau2(tau2SEXP);
    Rcpp::traits::input_parameter< int >::type n_iter(n_iterSEXP);
    Rcpp::traits::input_parameter< double >::type proposal_sd(proposal_sdSEXP);
    rcpp_result_gen = Rcpp::wrap(mcmc_linreg(y, X, beta_init, sigma2, tau2, n_iter, proposal_sd));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SA24204126_mcmc_linreg", (DL_FUNC) &_SA24204126_mcmc_linreg, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_SA24204126(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
